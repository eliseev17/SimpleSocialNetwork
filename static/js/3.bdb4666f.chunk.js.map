{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","MyPosts","React","memo","postsElements","posts","reverse","map","post","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","changeEditMode","updateUserStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.bdb4666f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__324tk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__h4Hhy\",\"posts\":\"MyPosts_posts__3zVUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__1rU6d\",\"item\":\"Post_item__Ckbuf\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/149/149071.png\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder=\"Post message\"\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(post => <Post message={post.message} likesCount={post.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const changeEditMode = () => {\r\n        setEditMode(!editMode);\r\n        if (!editMode)\r\n            props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={changeEditMode}>{props.status || \"No status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={changeEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}