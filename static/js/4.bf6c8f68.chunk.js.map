{"version":3,"sources":["components/Profile/ProfileContainer.jsx"],"names":["ProfileContainer","userId","this","props","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","isOwner","profile","status","updateUserStatus","savePhoto","React","Component","compose","connect","state","profilePage","auth","isAuth","saveProfile","withRouter"],"mappings":"iOAOMA,E,oKAEF,WACI,IAAIC,EAASC,KAAKC,MAAMC,MAAMC,OAAOJ,OAChCA,IACDA,EAASC,KAAKC,MAAMG,mBAEhBJ,KAAKC,MAAMI,QAAQC,KAAK,UAGhCN,KAAKC,MAAMM,eAAeR,GAC1BC,KAAKC,MAAMO,cAAcT,K,+BAG7B,WACIC,KAAKS,mB,gCAGT,SAAmBC,EAAWC,EAAWC,GACjCZ,KAAKC,MAAMC,MAAMC,OAAOJ,SAAWW,EAAUR,MAAMC,OAAOJ,QAC1DC,KAAKS,mB,oBAGb,WACI,OACI,cAAC,IAAD,2BAAaT,KAAKC,OAAlB,IACSY,SAAUb,KAAKC,MAAMC,MAAMC,OAAOJ,OAClCe,QAASd,KAAKC,MAAMa,QACpBC,OAAQf,KAAKC,MAAMc,OACnBC,iBAAkBhB,KAAKC,MAAMe,iBAC7BC,UAAWjB,KAAKC,MAAMgB,iB,GA9BZC,IAAMC,WA0CtBC,sBACXC,aARkB,SAACC,GAAD,MAAY,CAC9BR,QAASQ,EAAMC,YAAYT,QAC3BC,OAAQO,EAAMC,YAAYR,OAC1BX,iBAAkBkB,EAAME,KAAKzB,OAC7B0B,OAAQH,EAAME,KAAKC,UAIM,CAAClB,mBAAgBC,kBAAeQ,qBAAkBC,cAAWS,kBACtFC,IAFWP,CAGbtB","file":"static/js/4.bf6c8f68.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}