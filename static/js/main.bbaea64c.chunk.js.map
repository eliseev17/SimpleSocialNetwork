{"version":3,"sources":["assets/images/user.png","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","redux/dialogs-reducer.js","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.js","api/api.js","components/Navbar/Navbar.module.css","reportWebVitals.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","utils/validators/validators.js","assets/images/preloader.svg","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormControls.module.css","redux/profile-reducer.js"],"names":["module","exports","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Post","props","className","s","item","src","alt","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","reduxForm","form","MyPosts","React","memo","postsElements","posts","reverse","map","post","postsBlock","isOwner","values","addPost","newPostText","connect","profilePage","dispatch","addPostCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","statusSpan","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDataReduxForm","profile","error","style","formSummaryError","createField","Input","Object","keys","contacts","key","contact","Contact","contactTitle","contactValue","href","contactPhoto","ProfileData","activateEditMode","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","fullName","mainPhotoContainer","changesInputOnImgHover","photos","large","userPhoto","mainPhoto","fileInput","target","files","length","formData","then","initialValues","Profile","store","FormControl","input","meta","touched","children","hasError","styles","formControl","restProps","validators","text","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","data","follow","userId","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","put","file","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","nav","activeLink","to","activeClassName","updateObjectInArray","items","itemId","objPropName","newObjProps","i","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","paginator","Pagination","page","event","User","user","small","disabled","some","Users","u","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Component","compose","bind","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profileReducer","dialogsPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Box","sx","display","maxWidth","AppBar","position","zIndex","theme","drawer","color","Drawer","variant","width","minWidth","flexShrink","boxSizing","backgroundColor","Toolbar","overflow","flexGrow","p","path","render","AppContainer","withRouter","promise","Promise","all","SocialNetworkApp","ReactDOM","document","getElementById","maxLength","textAlign","preloader","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","setUserStatus","getUserProfile","getUserStatus","getState","contactName","split","substring","toLowerCase","reject","newPost","postId"],"mappings":"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","file":"static/js/main.bbaea64c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.ab7efdc7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3vVIP\",\"selectedPage\":\"Users_selectedPage__11NTH\",\"user\":\"Users_user__3ihWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__eo1KS\",\"loginBlock\":\"Header_loginBlock__1QISy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__h4Hhy\",\"posts\":\"MyPosts_posts__3zVUO\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Иван\"},\r\n        {id: 2, name: \"Мария\"},\r\n        {id: 3, name: \"Александр\"},\r\n        {id: 4, name: \"Фёдор\"},\r\n        {id: 5, name: \"Кирилл\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Привет!\"},\r\n        {id: 2, message: \"Как дела?\"},\r\n        {id: 3, message: \"React + Redux\"},\r\n        {id: 4, message: \"Learn JS\"},\r\n        {id: 5, message: \"Пока\"}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__MP5nP\",\"pageNumber\":\"Paginator_pageNumber__2F9Mw\",\"selectedPage\":\"Paginator_selectedPage__PTMwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__1rU6d\",\"item\":\"Post_item__Ckbuf\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/149/149071.png\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder=\"Post message\"\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Добавить запись</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            { props.isOwner\r\n                ? <div>\r\n                    <h3>Мои записи</h3>\r\n                    <AddNewPostForm onSubmit={onAddPost}/>\r\n                </div>\r\n                : <h3>Записи</h3>\r\n            }\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = (props) => {\r\n    return <MyPosts {...props} />\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer);","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner)\r\n            setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode &&\r\n            <div className={s.statusSpan}>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"Статус отсутствует\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Сохранить</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Имя</b>: {createField(Input, \"full name\", \"fullName\", [])}\r\n        </div>\r\n        <div>\r\n            <b>В поиске работы</b>: {createField(Input, \"\", \"lookingForAJob\", [], {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>Мои профессиональные навыки</b>: {createField(Textarea, \"My professional skills\", \"lookingForAJobDescription\", [])}\r\n        </div>\r\n        <div>\r\n            <b>Обо мне</b>: {createField(Textarea, \"About me\", \"aboutMe\", [])}\r\n        </div>\r\n        <div>\r\n            <b>Контакты</b>: {Object.keys(profile.contacts)\r\n            .map(key => {return <div key={key} className={s.contact}>\r\n                <b>{key}:</b> {createField(Input, key, \"contacts.\" + key, [])}\r\n            </div>})}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileData = ({profile, isOwner, activateEditMode}) => {\r\n    return <div>\r\n        { isOwner && <div>\r\n            <button onClick={activateEditMode}>Редактировать</button>\r\n        </div> }\r\n        <div>\r\n            <b>В поиске работы</b>: {profile.lookingForAJob ? \"да\" : \"нет\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>Мои профессиональные навыки</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n            <b>Обо мне</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n\r\n            <b>Контакты</b>:\r\n            <div className={s.contacts}>\r\n                {Object.keys(profile.contacts)\r\n                    .map(key => { return profile.contacts[key] && <Contact contactTitle={key} contactValue={profile.contacts[key]}/> })}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    let chooseContactIcon = () => {\r\n        if (contactTitle === \"facebook\")\r\n            return <img className={s.contactPhoto} src=\"https://cdn-icons-png.flaticon.com/512/1384/1384005.png\" alt=\"\"/>\r\n        if (contactTitle === \"twitter\")\r\n            return <img className={s.contactPhoto} src=\"https://cdn-icons-png.flaticon.com/512/733/733635.png\" alt=\"\"/>\r\n        if (contactTitle === \"vk\")\r\n            return <img className={s.contactPhoto} src=\"https://cdn-icons-png.flaticon.com/512/25/25684.png\" alt=\"\"/>\r\n        if (contactTitle === \"github\")\r\n            return <img className={s.contactPhoto} src=\"https://cdn-icons-png.flaticon.com/512/733/733609.png\" alt=\"\"/>\r\n        if (contactTitle === \"instagram\")\r\n            return <img className={s.contactPhoto} src=\"https://cdn-icons-png.flaticon.com/512/733/733614.png\" alt=\"\"/>\r\n        if (contactTitle === \"youtube\")\r\n            return <img className={s.contactPhoto} src=\"https://cdn-icons-png.flaticon.com/512/1384/1384028.png\" alt=\"\"/>\r\n        if (contactTitle === \"website\")\r\n            return <img className={s.contactPhoto} src=\"https://cdn-icons.flaticon.com/png/512/2721/premium/2721688.png?token=exp=1650451586~hmac=1350a94d213b2309cfe8c8a9b6175c0c\" alt=\"\"/>\r\n        if (contactTitle === \"mainLink\")\r\n            return <img className={s.contactPhoto} src=\"https://cdn-icons-png.flaticon.com/512/455/455691.png\" alt=\"\"/>\r\n    }\r\n\r\n    return <span className={s.contact}>\r\n        <a href={contactValue}>{chooseContactIcon()}</a>\r\n    </span>\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length)\r\n            savePhoto(e.target.files[0]);\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                    <h1 className={s.fullName}>{profile.fullName}</h1>\r\n                    <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} isOwner={isOwner}/>\r\n                </div>\r\n                <div className={s.mainPhotoContainer}>\r\n                    <span className={s.changesInputOnImgHover}>\r\n                       <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                        { isOwner && <label className={s.fileInput}>\r\n                            <input type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                            Обновить фотографию\r\n                        </label> }\r\n                    </span>\r\n                </div>\r\n                { editMode\r\n                    ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} activateEditMode={() => {setEditMode(true)}}/> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile} />\r\n            <MyPostsContainer store={props.store} isOwner={props.isOwner} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__324tk\",\"mainPhotoContainer\":\"ProfileInfo_mainPhotoContainer__2m0ZZ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__25C98\",\"changesInputOnImgHover\":\"ProfileInfo_changesInputOnImgHover__1Q6jh\",\"fileInput\":\"ProfileInfo_fileInput__2HBOS\",\"contact\":\"ProfileInfo_contact__22Wgf\",\"contacts\":\"ProfileInfo_contacts__-B2TT\",\"contactPhoto\":\"ProfileInfo_contactPhoto__lZMYS\",\"fullName\":\"ProfileInfo_fullName__2V51C\",\"status\":\"ProfileInfo_status__3lvpG\",\"statusSpan\":\"ProfileInfo_statusSpan__2JNYt\"};","import React from \"react\";\r\nimport styles from './FormControls.module.css'\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <div>\r\n                    {children}\r\n                </div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (component, placeholder, name, validators, props = {}, text = \"\") =>\r\n    <div>\r\n        <Field component={component}\r\n               placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"b4dd1893-249e-4612-8ef6-622b06abf27f\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Old method. Please use profileAPI object.\");\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        }).then(response => response.data);\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => response.data);\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`,{\r\n            email, password, rememberMe, captcha\r\n        }).then(response => response.data);\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n            .then(response => response.data);\r\n    },\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2ur61\",\"item\":\"Navbar_item__1uoWl\",\"activeLink\":\"Navbar_activeLink__3k9Tc\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.activeLink}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Профиль</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Сообщения</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>Новости</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Музыка</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Пользователи</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Настройки</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps}\r\n        }\r\n        return i;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    const data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\nimport {Pagination} from \"@mui/material\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    const handleChange = (event, page) => {\r\n        currentPage = page;\r\n        onPageChanged(page);\r\n    };\r\n\r\n\r\n    return  <div className={styles.paginator}>\r\n        <Pagination count={pagesCount} page={currentPage} onChange={handleChange} />\r\n    </div>\r\n    /*<div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n        { pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n            return <span className={ cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber) }\r\n                         key={p}\r\n                         onClick={(e) => {\r\n                             onPageChanged(p)\r\n                         }}>{p}</span>\r\n        })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n    </div>*/\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n        <div className={styles.user}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}\r\n                             alt='{}'/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id);\r\n                                  }}>\r\n                            Отписаться</button>\r\n                        : <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id);\r\n                                  }}>\r\n                            Подписаться</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    {/*<div>{\"user.location.country\"}</div>*/}\r\n                    {/*<div>{\"user.location.city\"}</div>*/}\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                   currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User key={u.id} user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     follow={props.follow} unfollow={props.unfollow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow, unfollow, requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer);","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src='https://cdn-icons-png.flaticon.com/512/1239/1239608.png'\r\n                alt=''/>\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Выйти</button></div>\r\n                    : <NavLink to={'/login'}>Войти</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'social-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const data = await authAPI.me();\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const data = await authAPI.logout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../common/FormsControls/FormControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(Input, \"Email\", \"email\", [required])}\r\n            {createField(Input, \"Password\", \"password\", [required], {type: \"password\"})}\r\n            {createField(Input, null, \"rememberMe\", [], {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl}/> }\r\n            { captchaUrl && createField(Input, \"Symbols from image\", \"captcha\", [required]) }\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS  = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from \"react\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport AppBar from \"@mui/material/AppBar\";\nimport {Drawer} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized)\n            return <Preloader/>\n\n        return (\n            <Box sx={{ display: 'flex', maxWidth: '100%' }}>\n                <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1, color: 'black' }}>\n                    <HeaderContainer/>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    sx={{\n                        width: '15%',\n                        minWidth: 140,\n                        flexShrink: 0,\n                        [`& .MuiDrawer-paper`]: { width: '15%', minWidth: 140, boxSizing: 'border-box', backgroundColor: '#383838'},\n                    }}>\n                    <Toolbar />\n                    <Box sx={{ overflow: 'auto'}}>\n                        <Navbar/>\n                    </Box>\n                </Drawer>\n                <Box component=\"main\" sx={{ flexGrow: 1, p: 3, backgroundColor: '#f5f5ef' }}>\n                    <Toolbar />\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n                        <Route path='/profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <LoginPage/>}/>\n                        <Route path='/music' render={() => <p>coming soon...</p>}/>\n                        <Route path='/settings' render={() => <p>coming soon...</p>}/>\n                        <Route path='/news' render={() => <p>coming soon...</p>}/>\n                </Box>\n            </Box>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\nconst SocialNetworkApp = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\nexport default SocialNetworkApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport SocialNetworkApp from \"./App\";\n\nReactDOM.render(<SocialNetworkApp/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const required = value => {\r\n    if (value)\r\n        return undefined\r\n    else\r\n        return 'Required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","export default __webpack_public_path__ + \"static/media/preloader.f85ec177.svg\";","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return <div style={ { backgroundColor: 'transparent', textAlign: 'center' } }>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__y1wRb\",\"error\":\"FormControls_error__2bhsa\",\"formSummaryError\":\"FormControls_formSummaryError__gihVx\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport profile from \"../components/Profile/Profile\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)};\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        case SET_STATUS:\r\n            return {...state, status: action.status};\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId: postId})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile: profile})\r\nexport const setUserStatus = (status) => ({type: SET_STATUS, status: status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const data = await profileAPI.savePhoto(file);\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const data = await profileAPI.saveProfile(profile);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        let contactName = data.messages[0].split('>')[1];\r\n        contactName = contactName.substring(0, contactName.length - 1).toLowerCase();\r\n        dispatch(stopSubmit(\"edit-profile\", {\"contacts\": {[contactName]: data.messages[0]} }));\r\n        return Promise.reject(data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}